diff -r db2511d9377c include/xine.h
--- a/include/xine.h
+++ b/include/xine.h
@@ -1413,6 +1413,7 @@ typedef struct {
   int64_t vpts;
 
   int timeout;       /* Max. time to wait for next frame in milliseconds */
+//  int continuous;    /* If true optimize resource allocation for continuous frame grabbing */
 
 } xine_grab_frame_t;
 
diff -r db2511d9377c src/video_out/video_out_vdpau.c
--- a/src/video_out/video_out_vdpau.c
+++ b/src/video_out/video_out_vdpau.c
@@ -1492,7 +1492,7 @@ static void vdpau_grab_current_output_su
       frame->grab_frame.img = NULL;
 
       if (frame->render_surface != VDP_INVALID_HANDLE) {
-        st = vdp_output_surface_destroy(frame->render_surface);
+        VDPAU_PROFILE(st = vdp_output_surface_destroy(frame->render_surface));
         if (st != VDP_STATUS_OK)
           fprintf(stderr, "vo_vdpau: Can't destroy grab render output surface: %s\n", vdp_get_error_string (st));
         frame->render_surface = VDP_INVALID_HANDLE;
@@ -1526,7 +1526,7 @@ static void vdpau_grab_current_output_su
       st = VDP_STATUS_OK;
       if (frame->render_surface == VDP_INVALID_HANDLE) {
         frame->vdp_runtime_nr = this->vdp_runtime_nr;
-        st = vdp_output_surface_create(vdp_device, VDP_RGBA_FORMAT_B8G8R8A8, frame->width, frame->height, &frame->render_surface);
+        VDPAU_PROFILE(st = vdp_output_surface_create(vdp_device, VDP_RGBA_FORMAT_B8G8R8A8, frame->width, frame->height, &frame->render_surface));
       }
       if (st == VDP_STATUS_OK) {
         VDPAU_PROFILE(st = vdp_output_surface_render_output_surface(frame->render_surface, NULL, grab_surface, &src_rect, NULL, NULL, VDP_OUTPUT_SURFACE_RENDER_ROTATE_0));
@@ -1534,6 +1534,12 @@ static void vdpau_grab_current_output_su
           VDPAU_PROFILE(st = vdp_output_surface_get_bits(frame->render_surface, NULL, &frame->rgba, &pitches));
           if (st != VDP_STATUS_OK)
             fprintf(stderr, "vo_vdpau: Can't get output surface bits for raw frame grabbing: %s\n", vdp_get_error_string (st));
+          //if (!frame->grab_frame.continuous) {
+            VDPAU_PROFILE(st = vdp_output_surface_destroy(frame->render_surface));
+            if (st != VDP_STATUS_OK)
+              fprintf(stderr, "vo_vdpau: Can't destroy grab render output surface: %s\n", vdp_get_error_string (st));
+            frame->render_surface = VDP_INVALID_HANDLE;
+          //}
         }
         else
           fprintf(stderr, "vo_vdpau: Can't render output surface for raw frame grabbing: %s\n", vdp_get_error_string (st));
