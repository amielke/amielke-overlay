diff -ruN replex-0.1.6.8/replex.c replex-0.1.6.8a/replex.c
--- replex-0.1.6.8/replex.c	2007-06-19 11:30:08.000000000 +0200
+++ replex-0.1.6.8a/replex.c	2008-03-20 10:31:31.000000000 +0100
@@ -287,7 +287,7 @@
 				*filled = 1;
 			}
 
-			if (iu->length != aframe->framesize){
+			if (iu->length != aframe->framesize && iu->length != aframe->framesize + 4){
 				iu->err= FRAME_ERR;
 				fprintf(stderr,"Wrong audio frame size: %d (%d)\n", 
 					iu->length, aframe->framesize);
@@ -1095,6 +1095,7 @@
 		
 	case PRIVATE_STREAM1:{
 		int hl=4;
+		if (!rx->ac3n) break;
 		if (rx->vdr){
 			hl=0;
 			p->type=0x80;
@@ -1570,7 +1571,7 @@
 		
 	case PRIVATE_STREAM1:
 		if (rx->vdr){
-			rx->scan_found = 0x80;
+			rx->scan_found = p->cid;
 			break;
 		}
 		else {
@@ -1680,6 +1681,7 @@
 			break;
 			
 			case 0x80 ... 0x8f:
+			case PRIVATE_STREAM1:
 			{
 				int old=0;
 				for (j=0; j < ac3n; j++)
@@ -1689,15 +1691,10 @@
 					}
 				if (!old){
 					ac3pid[ac3n]=rx->ac3_id[ac3n]=rx->scan_found;
-					if (rx->vdr){
-						printf("possible AC3 AUDIO with private stream 1 pid (0xbd) \n");
-					}
-					else {
-						printf("AC3 AUDIO %d: 0x%02x (%d) \n",
-						       ac3n+1,
-						       (int)ac3pid[ac3n],
-						       (int)ac3pid[ac3n]);
-					}
+					printf("AC3 AUDIO %d: 0x%02x (%d) \n",
+					       ac3n+1,
+					       (int)ac3pid[ac3n],
+					       (int)ac3pid[ac3n]);
 					if (ac3n+1< MAXAC3PID) ac3n++;
 				}
 				rx->scan_found = 0;
@@ -2406,8 +2403,11 @@
 		}
 		
 		while (get_next_video_unit(rx, &dummy)){
-			ring_read_file(&rx->vrbuffer, rx->dmx_out[0], 
-				       dummy.length);
+		        if ( ! rx->audio_only )
+				ring_read_file(&rx->vrbuffer, rx->dmx_out[0], 
+					       dummy.length);
+			else
+				ring_skip(&rx->vrbuffer, dummy.length);
 		}
 	}
 }
@@ -2480,6 +2480,7 @@
         printf ("  --allow_jump,       -j            :  allow jump in the PTS and try repair\n");
         printf ("  --keep_PTS,         -k            :  keep and don't correct PTS information of original\n");
 	printf ("  --min_jump,         -l <integer>  :  don't try to fix jumps in PTS larger than <int> but treat them as a cut (default 100ms)\n");
+	printf ("  --audio_only        -n            :  don't demux video stream\n");
         printf ("  --of,               -o <filename> :  set output file\n");
 	printf ("  --fillzero          -p            :  fill audio frames with zeros (only MPEG AUDIO)\n");
 	printf ("  --max_overflow      -q <integer>  :  max_number of overflows allowed (default: 100, 0=no restriction)\n");
@@ -2518,20 +2519,21 @@
 			{"ac3_id", required_argument, NULL, 'c'},
 			{"video_delay", required_argument, NULL, 'd'},
 			{"audio_delay", required_argument, NULL, 'e'},
-			{"ignore_PTS",required_argument, NULL, 'f'},
+			{"ignore_PTS",no_argument, NULL, 'f'},
 			{"larger_buffer",required_argument, NULL, 'g'},
 			{"help", no_argument , NULL, 'h'},
 			{"input_stream", required_argument, NULL, 'i'},
-			{"allow_jump",required_argument, NULL, 'j'},
-			{"keep_PTS",required_argument, NULL, 'k'},
+			{"allow_jump",no_argument, NULL, 'j'},
+			{"keep_PTS",no_argument, NULL, 'k'},
 			{"min_jump",required_argument, NULL, 'l'},
+			{"audio_only",no_argument, NULL, 'n'},
 			{"of",required_argument, NULL, 'o'},
-			{"fillzero",required_argument, NULL, 'p'},
+			{"fillzero",no_argument, NULL, 'p'},
 			{"max_overflow",required_argument, NULL, 'q'},
-			{"scan",required_argument, NULL, 's'},
+			{"scan",no_argument, NULL, 's'},
 			{"type", required_argument, NULL, 't'},
 			{"video_pid", required_argument, NULL, 'v'},
-			{"vdr",required_argument, NULL, 'x'},
+			{"vdr",no_argument, NULL, 'x'},
 			{"analyze",required_argument, NULL, 'y'},
 			{"demux",no_argument, NULL, 'z'},
 			{0, 0, 0, 0}
@@ -2580,11 +2582,14 @@
                         rx.allow_jump = MIN_JUMP;
                         break;
 		case 'k':
-			rx.keep_pts =1;
+			rx.keep_pts = 1;
 			break;
 		case 'l':
 			min_jump = strtol(optarg,(char **)NULL, 0) *CLOCK_MS; 
 			break;
+		case 'n':
+			rx.audio_only = 1;
+			break;
                 case 'o':
                         filename = optarg;
                         break;
@@ -2726,19 +2731,21 @@
 			exit(0);
 		}
 			
-		snprintf(fname,256,"%s.mv2",filename);
-		if ((rx.dmx_out[0] = open(fname,O_WRONLY|
-					  O_CREAT|O_TRUNC|
-					  O_LARGEFILE,
-					  S_IRUSR|S_IWUSR|
-					  S_IRGRP|S_IWGRP|
-					  S_IROTH|S_IWOTH)) 
-		    < 0){
-			perror("Error opening output file");
-			exit(1);
+		if( ! rx.audio_only ) {
+			snprintf(fname,256,"%s.mv2",filename);
+			if ((rx.dmx_out[0] = open(fname,O_WRONLY|
+						  O_CREAT|O_TRUNC|
+						  O_LARGEFILE,
+						  S_IRUSR|S_IWUSR|
+						  S_IRGRP|S_IWGRP|
+						  S_IROTH|S_IWOTH)) 
+				    < 0){
+				perror("Error opening output file");
+				exit(1);
+			}
+			fprintf(stderr,"Video output File is: %s\n", 
+				fname);
 		}
-		fprintf(stderr,"Video output File is: %s\n", 
-			fname);
 		
 		for (i=0; i < rx.apidn; i++){
 			snprintf(fname,256,"%s%d.mp2",filename
diff -ruN replex-0.1.6.8/replex.h replex-0.1.6.8a/replex.h
--- replex-0.1.6.8/replex.h	2007-06-19 11:30:08.000000000 +0200
+++ replex-0.1.6.8a/replex.h	2008-03-20 10:31:31.000000000 +0100
@@ -66,6 +66,7 @@
 	int fillzero;
 	int overflows;
 	int max_overflows;
+	int audio_only;
 
 	uint64_t video_delay;
 	uint64_t audio_delay;
--- replex-0.1.6.8/element.c	2007-06-19 11:30:08.000000000 +0200
+++ replex-0.1.6.8a/element.c	2008-12-18 19:27:35.452042858 +0100
@@ -566,7 +566,7 @@
 {
 	int c = 0;
 	int fr =0;
-	uint8_t headr[4];
+	uint8_t headr[7];
         int sample_rate_index;
 
 	af->set=0;
@@ -632,7 +632,7 @@
 int get_ac3_info(ringbuffer *rbuf, audio_frame_t *af, long off, int le, int verb)
 {
 	int c=0;
-	uint8_t headr[6];
+	uint8_t headr[7];
 	uint8_t frame;
 	int half = 0;
 	int fr;
